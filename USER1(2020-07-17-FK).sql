-- 여기는 user1화면입니다.

-------------------------------------------------------------------------------
-- [ 외래키(FOREIGN KEY) ]
-------------------------------------------------------------------------------
-- 두 개 이상의 테이블 간에 relation을 강제로 설정하여 
-- 테이블에 추가되는 데이터의 무결성을 보증하는 제약조건 설정
-- JOIN을 사용하여 두개의 테이블에 relation을 설정하기도 하는데
-- 무슨 차이??
-- JOIN은 단순히 VIEW의 편리함(필요한 정보를 Projection 포함)을 위해서 사용
-- FK는 데이터를 추가하는 단계부터 잘못된 데이터가 추가되는 것을 방지하는 목적
-- FK는 테이블을 생성할 때 만들기도 하지만
-- 일반적으로 테이블을 생성한 후 테이블 변경을 통해 만드는 것이 좋다.

-- 가장 좋은 경우는 테이블을 생성하고 데이터를 한개도 추가하지 않은 상태로
-- 설정하는 것이다.
-- 하지만 App을 사용하기 시작하는 초기단계에서는 다량의 데이터를 추가해야 하는
-- 일들이 많아서 이때 FK가 설정되어 있으면, SubTable에 데이터를 추가하는 데
-- 많은 에로사항이 발생한다.
-- 이런 경우 초기에 FK를 설정하지 않거나 FK를 제거하고 데이터를 입력(추가)하는
-- 경우가 많다.

-- 현재 스키마에 있는 학생정보와 성적정보테이블을 FK(외래키)관계로 설정해보자
-- FK관계의 테이블을 부모테이블과 자식테이블로 분류하는데, 
-- FK설정은 자식테이블에서 실시한다.

-- 학생정보 테이블에 학생정보가 없으면, 성적정보를 입력할 수 없도록 설정하자
-- 학생정보 테이블을 '부모테이블', 성적정보 테이블을 '자식테이블'이라고 한다.

SELECT * FROM tbl_score;

-- [ 사후(테이블 생성후) FK 설정 ]
ALTER TABLE tbl_score           -- tbl_score(자식)테이블의 설정을 변경하겠다.
ADD CONSTRAINT fk_st_sc         -- 제약조건(정책)을 추가(add)하겠다.
FOREIGN KEY(sc_num)             -- 외래키를(누구를) : sc_num칼럼을 기준으로
REFERENCES tbl_student(st_num); -- 부모는 누구? : tbl_student
                                -- 연결할 부모칼럼은? : st_num

-- [ 생성된 FK제약조건 삭제 ]
ALTER TABLE tbl_score           -- tbl_score(자식)테이블의 설정을 변경하겠다.
DROP CONSTRAINT fk_st_sc        -- 제약조건을 제거(drop)하겠다.
CASCADE;

-- 학생정보에 없는 20200학생의 국어성적을 추가해보자
-- 20200학생의 국어점수가 학적정보가 이상이 없는 학생의 성적인지
-- 확신할 수 있는 방법이 없다.
-- 따라서 이 데이터는 무결성원칙에 위배되는 데이터일 수도 있다.
INSERT INTO tbl_score(sc_num, sc_kor) VALUES ('20200',100);
DELETE FROM tbl_score WHERE sc_num = '20200';

-------------------------------------------------------------------------------
-- [ FK설정이 된 두 테이블 간의 관계 ]
-------------------------------------------------------------------------------
--    (학생정보 st_num데이터)                 (성적정보 sc_num데이터)
--      값 추가(있다)             >>         있다(추가할 수 있다)
--      값이 없다                 >>         절대 없다(추가할 수 없다)
--      반드시 있어야 한다        <<         있다(추가되어 있다)
-------------------------------------------------------------------------------

-- [ 만약 학생정보 데이터가 필요가 없어서 삭제를 할 경우 ]
-- 먼저 성적정보에서 삭제하고자 하는 학번의 성적데이터를 모두 삭제해야 한다.
-- [ 아주 특별하게 학생의 학번(st_num)변경할 경우 ]
-- 1. 먼저 성적정보에서 변경할 학번의 성적데이터를 모두 삭제하고
-- 2. 학생정보의 학번을 변경하고
-- 3. 변경된 학번으로 성적데이터를 추가해야 한다.
-- ALTER TABLE명령을 수행하게 되면 명령이 시작된 순간 table의 모든 데이터는
-- 접근이 금지된다
-- 만약 저장된 데이터가 매우 많다면 
-- 상당한 시간이 소요될 것이고, 그 동안 table의 데이터를 필요로 하는
-- App은 실행이 중단된다.
-- 칼럼을 추가/삭제/이름변경/타입변경 등을 수행할 수 있다.
-- 칼럼을 삭제, 변경하는 경우 기존데이터가 손상되는 위험이 있다.
-- ( ALTER TABLE은 정말 꼭 필요한 경우에만 사용!!)

ALTER TABLE tbl_score           
DROP CONSTRAINT fk_st_sc
CASCADE;

ALTER TABLE tbl_score           
ADD CONSTRAINT fk_st_sc         
FOREIGN KEY(sc_num)             
REFERENCES tbl_student(st_num); 
                        















